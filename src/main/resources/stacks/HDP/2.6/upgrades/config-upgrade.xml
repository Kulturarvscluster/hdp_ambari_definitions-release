<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<upgrade-config-changes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-config.xsd">
  <services>
    <service name="ZEPPELIN">
      <component name="ZEPPELIN_MASTER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_0_0_zeppelin_master">
            <type>zeppelin-env</type>
            <transfer operation="delete" delete-key="shiro_ini_content" />
            <transfer operation="delete" delete-key="log4j_properties_content" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_6_0_0__set_zeppelin.server.ssl.port">
            <type>zeppelin-config</type>
            <set key="zeppelin.server.ssl.port" value="9995"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_hdfs_plugin_cluster_name">
            <type>ranger-hdfs-audit</type>
            <set key="ranger.plugin.hdfs.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-hdfs-plugin-properties" if-key="ranger-hdfs-plugin-enabled" if-key-state="present"/>
          </definition>

          <definition xsi:type="configure" id="hdfs_namenode_prevent_gc_heuristics" summary="Prevent Garbage Collection Heuristics">
            <type>hadoop-env</type>
            <replace  key="content" find="-XX:+PrintGCDateStamps -Xms{{namenode_heapsize}}" replace-with="-XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}}"/>
            <replace  key="content" find="-XX:+PrintGCDateStamps ${HADOOP_NAMENODE_INIT_HEAPSIZE}" replace-with="-XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly ${HADOOP_NAMENODE_INIT_HEAPSIZE}"/>
          </definition>
        </changes>
      </component>
      <component name="DATANODE">
        <changes>
          <definition xsi:type="configure" id="hdfs_set_data_transfer_protection" summary="Enables SASL for authentication of data transfer protocol">
            <type>hdfs-site</type>
            <set key="dfs.data.transfer.protection" value="authentication,privacy" />
          </definition>

          <definition xsi:type="configure" id="hdfs_set_hadoop_rpc_protection_on_kerberized_cluster" summary="Encrypting the data transfered between hadoop services and clients">
            <type>core-site</type>
            <set key="hadoop.rpc.protection" value="authentication,privacy" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_hive_plugin_cluster_name">
            <type>ranger-hive-audit</type>
            <set key="ranger.plugin.hive.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-hive-audit" if-key="xasecure.audit.destination.solr" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_hive_plugin_urlauth_filesystem_schemes">
            <type>ranger-hive-security</type>
            <set key="ranger.plugin.hive.urlauth.filesystem.schemes" value="hdfs:,file:,wasb:,adl:"
              if-type="ranger-hive-security" if-key="ranger.plugin.hive.service.name" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_6_maint_jaas_config_for_hive_hook" summary="Updating hive atlas application properties">
            <type>hive-atlas-application.properties</type>
            <set key ="atlas.jaas.ticketBased-KafkaClient.loginModuleControlFlag" value="required"
              if-type="cluster-env" if-key="security_enabled" if-value="true"/>
            <set key ="atlas.jaas.ticketBased-KafkaClient.loginModuleName" value="com.sun.security.auth.module.Krb5LoginModule"
              if-type="cluster-env" if-key="security_enabled" if-value="true"/>
            <set key ="atlas.jaas.ticketBased-KafkaClient.option.useTicketCache" value="true"
              if-type="cluster-env" if-key="security_enabled" if-value="true"/>
          </definition>
        </changes>
      </component>
      <component name="HIVE_SERVER_INTERACTIVE">
        <changes>
          <definition xsi:type="configure" id="llap_update_tez_shuffle_ssl_enable" summary="Update additional LLAP-Tez settings">
            <type>tez-interactive-site</type>
            <set key="tez.runtime.shuffle.ssl.enable" value="false"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_6_maint_druid_config_for_hive_hook" summary="Updating druid hive related properties">
            <type>hive-site</type>
            <set key="hive.druid.metadata.password" value="{{druid_metadata_password}}" if-type="druid-common"/>
            <set key="hive.druid.indexer.segments.granularity" value="DAY" if-type="druid-common"/>
            <set key="hive.druid.indexer.partition.size.max" value="1000000" if-type="druid-common"/>
            <set key="hive.druid.indexer.memory.rownum.max" value="75000" if-type="druid-common"/>
            <set key="hive.druid.select.distribute" value="true" if-type="druid-common"/>
            <set key="hive.druid.basePersistDirectory" value="" if-type="druid-common"/>
            <set key="hive.druid.storage.storageDirectory" value="{{druid_storage_dir}}" if-type="druid-common"/>
            <set key="hive.druid.passiveWaitTimeMs" value="30000" if-type="druid-common"/>
            <set key="hive.druid.working.directory" value="/tmp/druid-indexing" if-type="druid-common"/>
            <set key="hive.druid.bitmap.type" value="roaring" if-type="druid-common"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="HBASE">
      <component name="HBASE_MASTER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_hbase_plugin_cluster_name">
            <type>ranger-hbase-audit</type>
            <set key="ranger.plugin.hbase.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-hbase-plugin-properties" if-key="ranger-hbase-plugin-enabled" if-key-state="present"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_knox_plugin_cluster_name">
            <type>ranger-knox-audit</type>
            <set key="ranger.plugin.knox.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-knox-plugin-properties" if-key="ranger-knox-plugin-enabled" if-key-state="present"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="STORM">
      <component name="NIMBUS">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_storm_plugin_cluster_name">
            <type>ranger-storm-audit</type>
            <set key="ranger.plugin.storm.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-storm-plugin-properties" if-key="ranger-storm-plugin-enabled" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="storm_remove_jmxetric" summary="Removing jmxetric from childopts.">
            <type>storm-site</type>
            <regex-replace key="nimbus.childopts" find=" -javaagent:(.*)JVM" replace-with=""/>
            <regex-replace key="supervisor.childopts" find=" -javaagent:(.*)JVM" replace-with=""/>
            <regex-replace key="worker.childopts" find=" -javaagent:(.*)JVM" replace-with=""/>
          </definition>
          <definition xsi:type="configure" id="hdp_3_0_remove_empty_storm_topology_submission_notifier_plugin_class" summary="Removing empty storm.topology.submission.notifier.plugin.class property">
            <type>storm-site</type>
            <transfer operation="delete" delete-key="storm.topology.submission.notifier.plugin.class" if-key="storm.topology.submission.notifier.plugin.class" if-type="storm-site" if-value=" "/>
          </definition>
          <definition xsi:type="configure" id="increase_storm_zookeeper_timeouts" summary="Increase storm.zookeeper.session.timeout and storm.zookeeper.connection.timeout property">
            <type>storm-site</type>
            <set key="storm.zookeeper.session.timeout" value="30000" if-key="storm.zookeeper.session.timeout" if-type="storm-site" if-value="20000" />
            <set key="storm.zookeeper.connection.timeout" value="30000" if-key="storm.zookeeper.connection.timeout" if-type="storm-site" if-value="15000" />
          </definition>
          <definition xsi:type="configure" id="storm_nimbus_autocred_config" summary="Update Storm's Nimbus AutoCred config">
            <type>storm-site</type>
            <set key="nimbus.autocredential.plugins.classes" value="['org.apache.storm.hdfs.security.AutoHDFS', 'org.apache.storm.hbase.security.AutoHBase', 'org.apache.storm.hive.security.AutoHive']" if-type="streamline-common" if-key="authorizer.class.name" if-key-state="present"/>
            <set key="nimbus.credential.renewers.classes" value="['org.apache.storm.hdfs.security.AutoHDFS', 'org.apache.storm.hbase.security.AutoHBase', 'org.apache.storm.hive.security.AutoHive']" if-type="streamline-common" if-key="authorizer.class.name" if-key-state="present"/>
            <set key="nimbus.credential.renewers.freq.secs" value="82800" if-type="streamline-common" if-key="authorizer.class.name" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="storm_worker_log4j_parameterize" summary="Parameterizing Storm Worker Log4J Properties">
            <type>storm-worker-log4j</type>
            <set key="storm_wrkr_a1_maxfilesize" value="100"/>
            <set key="storm_wrkr_a1_maxbackupindex" value="9"/>
            <set key="storm_wrkr_out_maxfilesize" value="100"/>
            <set key="storm_wrkr_out_maxbackupindex" value="4"/>
            <set key="storm_wrkr_err_maxfilesize" value="100"/>
            <set key="storm_wrkr_err_maxbackupindex" value="4"/>
            <regex-replace key="content" find="}.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;\$\{pattern}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;(?:[0-9]+) MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;([0-9]+)"
                                         replace-with="}.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;${pattern}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;{{storm_wrkr_a1_maxfilesize}} MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;{{storm_wrkr_a1_maxbackupindex}}"/>
            <regex-replace key="content" find="}.out.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;\$\{patternNoTime}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;(?:[0-9]+) MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;([0-9]+)"
                                         replace-with="}.out.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;${patternNoTime}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;{{storm_wrkr_out_maxfilesize}} MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;{{storm_wrkr_out_maxbackupindex}}"/>
            <regex-replace key="content" find="}.err.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;\$\{patternNoTime}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;(?:[0-9]+) MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;([0-9]+)"
                                             replace-with="}.err.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;${patternNoTime}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;{{storm_wrkr_err_maxfilesize}} MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;{{storm_wrkr_err_maxbackupindex}}"/>
          </definition>
          <definition xsi:type="configure" id="storm_cluster_log4j_parameterize" summary="Parameterizing Storm Cluster Log4J Properties">
            <type>storm-cluster-log4j</type>
            <set key="storm_a1_maxfilesize" value="100"/>
            <set key="storm_a1_maxbackupindex" value="9"/>
            <regex-replace key="content" find="A1&quot; immediateFlush=&quot;false&quot;&#xA;                 fileName=&quot;\$\{sys:storm.log.dir}/\$\{sys:logfile.name}&quot;&#xA;                 filePattern=&quot;\$\{sys:storm.log.dir}/\$\{sys:logfile.name}.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;\$\{pattern}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;(?:[0-9]+) MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;([0-9]+)"
                                         replace-with="A1&quot; immediateFlush=&quot;false&quot;&#xA;                 fileName=&quot;${sys:storm.log.dir}/${sys:logfile.name}&quot;&#xA;                 filePattern=&quot;${sys:storm.log.dir}/${sys:logfile.name}.%i.gz&quot;&gt;&#xA;        &lt;PatternLayout&gt;&#xA;            &lt;pattern&gt;${pattern}&lt;/pattern&gt;&#xA;        &lt;/PatternLayout&gt;&#xA;        &lt;Policies&gt;&#xA;            &lt;SizeBasedTriggeringPolicy size=&quot;{{storm_a1_maxfilesize}} MB&quot;/&gt; &lt;!-- Or every 100 MB --&gt;&#xA;        &lt;/Policies&gt;&#xA;        &lt;DefaultRolloverStrategy max=&quot;{{storm_a1_maxbackupindex}}"/>
          </definition>
          <definition xsi:type="configure" id="hdp_3_0_update_storm_env_ext_classpath" summary="Change classpath to use wildcard">
            <type>storm-env</type>
            <replace key="content" find="export STORM_EXT_CLASSPATH=$STORM_AUTOCREDS_LIB_DIR" replace-with="export STORM_EXT_CLASSPATH=&quot;$STORM_AUTOCREDS_LIB_DIR/*&quot;"/>
          </definition>
          <definition xsi:type="configure" id="storm_update_ui_filter_package" summary="Updating UI filter package">
            <type>storm-site</type>
            <replace key="ui.filter" find="org.apache.hadoop.security.authentication.server.AuthenticationFilter"
                     replace-with="org.apache.storm.org.apache.hadoop.security.authentication.server.AuthenticationFilter" />
          </definition>
          <definition xsi:type="configure" id="hdp_3_0_0_0_storm_logsearch_conf" summary="remove commented out worker event and add grok patterns">
                <type>storm-logsearch-conf</type>
                <replace key="component_mappings" find="storm_logviewer;" replace-with="storm_logviewer,storm_worker_event;"/>
                <replace key="content" find="{#&#xA;    ,{&#xA;      &quot;type&quot;:&quot;storm_worker&quot;,&#xA;      &quot;rowtype&quot;:&quot;service&quot;,&#xA;      &quot;path&quot;:&quot;{{default(&apos;/configurations/storm-env/storm_log_dir&apos;, &apos;/var/log/storm&apos;)}}/workers-artifacts/*/*/worker.log&quot;,&#xA;      &quot;init_default_fields&quot;: &quot;true&quot;&#xA;    }&#xA;    #}"
                replace-with="            ,{
                &#xA;            &quot;type&quot;:&quot;storm_worker&quot;,
                &#xA;            &quot;rowtype&quot;:&quot;service&quot;,
                &#xA;            &quot;path&quot;:&quot;{{default(&apos;/configurations/storm-env/storm_log_dir&apos;, &apos;/var/log/storm&apos;)}}/workers-artifacts/*/*/worker.log&quot;,
                &#xA;            &quot;init_default_fields&quot;: &quot;true&quot;&#xA;            },&#xA;            {&#xA;            &quot;type&quot;:&quot;storm_worker_event&quot;,
                &#xA;            &quot;rowtype&quot;:&quot;service&quot;,&#xA;            &quot;path&quot;:&quot;{{default(&apos;/configurations/storm-env/storm_log_dir&apos;, &apos;/var/log/storm&apos;)}}/workers-artifacts/*/*/events.log&quot;,
                &#xA;            &quot;init_default_fields&quot;: &quot;true&quot;,&#xA;            &quot;add_fields&quot;: {&#xA;            &quot;level&quot;:&quot;INFO&quot;&#xA;            }
                &#xA;            }"/>
                <replace key="content" find="&#xA;       }&#xA;     ]&#xA;   }" replace-with="},&#xA;            {&#xA;            &quot;filter&quot;:&quot;grok&quot;,&#xA;            &quot;sort_order&quot;: 5,&#xA;            &quot;conditions&quot;:{&#xA;            &quot;fields&quot;:{&#xA;            &quot;type&quot;:[&#xA;            &quot;storm_worker_event&quot;&#xA;            ]&#xA;            }&#xA;            },
                &#xA;            &quot;log4j_format&quot;:&quot;&quot;,&#xA;            &quot;message_pattern&quot;:&quot;^%{TIMESTAMP_ISO8601:logtime}(!_DELIM_!&amp;lt;STREAMLINE_EVENT&amp;gt;!_DELIM_!%{DATA:sdi_streamline_component_name}!_DELIM_!%{DATA:sdi_streamline_event_id}!_DELIM_!%{DATA:sdi_streamline_root_ids}!_DELIM_!%{DATA:sdi_streamline_parent_ids}!_DELIM_!%{DATA:sdi_streamline_event_fields_and_values}!_DELIM_!%{DATA:sdi_streamline_event_headers}!_DELIM_!%{DATA:sdi_streamline_event_aux_fields_and_values})|(%{GREEDYDATA})&quot;,&#xA;            &quot;post_map_values&quot;:{&#xA;            &quot;logtime&quot;:{&#xA;            &quot;map_date&quot;:{&#xA;            &quot;target_date_pattern&quot;:&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;&#xA;            }&#xA;            }&#xA;            }&#xA;            },
                &#xA;            {&#xA;            &quot;filter&quot;:&quot;grok&quot;,&#xA;            &quot;sort_order&quot;: 6,&#xA;            &quot;conditions&quot;:{&#xA;            &quot;fields&quot;:{&#xA;            &quot;type&quot;:[&#xA;            &quot;storm_worker_event&quot;&#xA;            ]&#xA;            }&#xA;            },&#xA;            &quot;source_field&quot;: &quot;path&quot;,&#xA;            &quot;remove_source_field&quot;: &quot;false&quot;,&#xA;            &quot;message_pattern&quot;:&quot;{{default(&apos;/configurations/storm-env/storm_log_dir&apos;, &apos;/var/log/storm&apos;)}}/workers-artifacts/%{DATA:sdi_storm_topology_id}/%{DATA:sdi_storm_worker_port}/events\\.log&quot;&#xA;            },
                &#xA;            {&#xA;            &quot;filter&quot;:&quot;grok&quot;,&#xA;            &quot;sort_order&quot;: 7,&#xA;            &quot;conditions&quot;:{&#xA;            &quot;fields&quot;:{&#xA;            &quot;type&quot;:[&#xA;            &quot;storm_worker_event&quot;&#xA;            ]&#xA;            }&#xA;            },&#xA;            &quot;source_field&quot;: &quot;sdi_storm_topology_id&quot;,&#xA;            &quot;remove_source_field&quot;: &quot;false&quot;,&#xA;            &quot;message_pattern&quot;:&quot;(streamline\\-%{DATA:sdi_streamline_topology_id}\\-%{DATA:sdi_streamline_topology_name}\\-[0-9]+\\-[0-9]+)|(%{DATA:sdi_storm_topology_id})&quot;&#xA;            }&#xA;            ]&#xA;            }"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="YARN">
      <component name="RESOURCEMANAGER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_yarn_plugin_cluster_name">
            <type>ranger-yarn-audit</type>
            <set key="ranger.plugin.yarn.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-yarn-plugin-properties" if-key="ranger-yarn-plugin-enabled" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_6_yarn_preemption" summary="Resource Manager Preemption Settings">
            <type>yarn-site</type>
            <set key="yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round" value="0.1"
              if-type="yarn-site"
              if-key="yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round"
              if-key-state="absent" />
            <set key="yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor" value="1"
              if-type="yarn-site"
              if-key="yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor"
              if-key-state="absent" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_6_yarn_app_classpath_parameterization" summary="Application Classpath Parameterization">
            <type>yarn-site</type>
            <replace key="yarn.application.classpath" find="/usr/hdp/current/hadoop-client" replace-with="{{hadoop_home}}"/>
          </definition>
        </changes>
      </component>

      <component name="NODEMANAGER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_0_0_yarn_nodemanager_llap_mem">
            <type>yarn-site</type>
            <set key="yarn.nodemanager.kill-escape.launch-command-line" value="slider-agent,LLAP"/>
            <set key="yarn.nodemanager.kill-escape.user" value="hive"/>
          </definition>
        </changes>
      </component>

      <component name="APP_TIMELINE_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_yarn_spark_versioned_classpaths">
            <type>yarn-site</type>
            <replace key="yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath" find="${hdp.version}/spark/" replace-with="{{spark_version}}/spark/"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_kafka_plugin_cluster_name">
            <type>ranger-kafka-audit</type>
            <set key="ranger.plugin.kafka.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-kafka-plugin-properties" if-key="ranger-kafka-plugin-enabled" if-key-state="present"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="ATLAS">
      <component name="ATLAS_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_atlas_plugin_cluster_name">
            <type>ranger-atlas-audit</type>
            <set key="ranger.plugin.atlas.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-atlas-plugin-properties" if-key="ranger-atlas-plugin-enabled" if-key-state="present"/>
          </definition>
          <definition xsi:type="configure" id="atlas_env_gc_worker" summary="Updating Atlas Env gc-worker configuration">
            <type>atlas-env</type>
            <replace key="content" find="-Xloggc:$ATLAS_LOG_DIRgc-worker.log" replace-with="-Xloggc:$ATLAS_LOG_DIR/gc-worker.log"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_6_atlas_kafka_auto_commit_enable_property_delete" summary="Updating Atlas Kafka configurations.">
            <type>application-properties</type>
            <transfer operation="delete" delete-key="atlas.kafka.auto.commit.enable"/>
          </definition>
          <definition xsi:type="configure" id="atlas_log4j_update_logger_settings" summary="Updating logger configurations for Atlas.">
            <type>atlas-log4j</type>
            <replace key="content" find="&lt;appender name=&quot;FILE&quot; class=&quot;org.apache.log4j.DailyRollingFileAppender&quot;&gt;" replace-with="&lt;appender name=&quot;FILE&quot; class=&quot;org.apache.log4j.RollingFileAppender&quot;&gt;"/>
            <replace key="content" find="&lt;logger name=&quot;com.thinkaurelius.titan&quot; additivity=&quot;false&quot;&gt;&#x20;&#x20;&#x20;&#x20;&lt;level value=&quot;info&quot;/&gt;" replace-with="&lt;logger name=&quot;com.thinkaurelius.titan&quot; additivity=&quot;false&quot;&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;level value=&quot;warn&quot;/&gt;"/>
          </definition>
          <definition xsi:type="configure" id="atlas_hbase_conf_dir" summary="Adding configuration for hbase conf directory">
            <type>atlas-env</type>
            <set key="atlas.hbase.conf.dir" value="/etc/hbase/conf"/>
          </definition>
          <definition xsi:type="configure" id="atlas_upgrade_configuration" summary="Updating Atlas configurations.">
            <type>application-properties</type>
            <transfer operation="delete" delete-key="atlas.graph.storage.backend" />
            <transfer operation="delete" delete-key="atlas.graph.index.search.backend" />
              <transfer operation="delete" delete-key="atlas.auth.policy.file" />
            <set key="atlas.graph.storage.hbase.table" value="atlas_janus" />
          </definition>
          <definition xsi:type="configure" id="atlas_log4j_adding_janus_graph" summary="Adding Janus-graph logger configurations for Atlas.">
            <type>atlas-log4j</type>
            <replace key="content" find="&lt;logger name=&quot;com.thinkaurelius.titan&quot; additivity=&quot;false&quot;&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;level value=&quot;warn&quot;/&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;appender-ref ref=&quot;FILE&quot;/&gt;&#xA;&#x20;&#x20;&lt;/logger&gt;" replace-with="&lt;logger name=&quot;com.thinkaurelius.titan&quot; additivity=&quot;false&quot;&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;level value=&quot;warn&quot;/&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;appender-ref ref=&quot;FILE&quot;/&gt;&#xA;&#x20;&#x20;&lt;/logger&gt;&#xA;&#xA;&#xA;&#x20;&#x20;&lt;logger name=&quot;org.janusgraph&quot; additivity=&quot;false&quot;&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;level value=&quot;warn&quot;/&gt;&#xA;&#x20;&#x20;&#x20;&#x20;&lt;appender-ref ref=&quot;FILE&quot;/&gt;&#xA;&#x20;&#x20;&lt;/logger&gt;&#xA;"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="RANGER_KMS">
      <component name="RANGER_KMS_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_maint_ranger_kms_plugin_cluster_name">
            <type>ranger-kms-audit</type>
            <set key="ranger.plugin.kms.ambari.cluster.name" value="{{cluster_name}}"
              if-type="ranger-kms-audit" if-key="ranger.plugin.kms.ambari.cluster.name" if-key-state="absent"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_THRIFTSERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_0_0_spark_thriftserver">
            <type>spark-thrift-sparkconf</type>
            <set key="spark.yarn.executor.failuresValidityInterval" value="2h"/>
            <set key="spark.yarn.maxAppAttempts" value="1"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="SPARK2">
      <component name="SPARK2_THRIFTSERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_0_0_spark2_thriftserver">
            <type>spark2-thrift-sparkconf</type>
            <set key="spark.yarn.executor.failuresValidityInterval" value="2h"/>
            <set key="spark.yarn.maxAppAttempts" value="1"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="TEZ">
      <component name="TEZ_CLIENT">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_tez_tarball_ld_library">
            <type>tez-site</type>
            <set key="tez.am.launch.env" value="LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64:./tezlib/lib/native:./tezlib/lib/native/Linux-{{architecture}}-64" />
            <set key="tez.task.launch.env" value="LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64:./tezlib/lib/native:./tezlib/lib/native/Linux-{{architecture}}-64" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="MAPREDUCE2">
      <component name="MAPREDUCE2_CLIENT">
        <changes>
          <definition xsi:type="configure" id="hdp_2_6_mapreduce_tarball_ld_library">
            <type>mapred-site</type>
            <set key="mapreduce.admin.user.env" value="LD_LIBRARY_PATH={{hadoop_lib_home}}/native:{{hadoop_lib_home}}/native/Linux-{{architecture}}-64:./mr-framework/hadoop/lib/native:./mr-framework/hadoop/lib/native/Linux-{{architecture}}-64" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_TAGSYNC">
        <changes>
          <definition xsi:type="configure" id="hdp_3_0_add_ranger_tagsync_cookie_enabled_config">
            <type>ranger-tagsync-site</type>
            <set key="ranger.tagsync.cookie.enabled" value="true" if-type="ranger-tagsync-site" if-key="ranger.tagsync.cookie.enabled" if-key-state="absent" />
          </definition>
        </changes>
      </component>
    </service>

  </services>
</upgrade-config-changes>
